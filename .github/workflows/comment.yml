name: Comment or Update Issue Comment
on:
    workflow_call:
      inputs:
        issue:
          description: "IssueId"
          required: true
          type: number
        body:
          description: "Body"
          required: true
          type: string
      outputs:
        success:
          description: "Success"
          value: ${{jobs.comment-or-update.outputs.success}}
permissions:
  issues: write
jobs:
  comment-or-update:
    runs-on: ubuntu-latest
    outputs: 
        success: ${{steps.comment.outputs.success}}
    steps:
      - name: Set up gh CLI
        run: gh auth status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check existing comments and update or create
        id: comment
        run: |
          # Fetch all comments from the issue
          EXISTING_COMMENT=$(gh api --method GET /repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments -q 'map(select(.user.login=="${{env.BOT_NAME}}"))[0]')
          success=0
          if [[ -n "$EXISTING_COMMENT" ]]; then
            # Extract the ID of the existing comment
            COMMENT_ID=$(echo "$EXISTING_COMMENT" | jq -r .id)
            echo "Found an existing comment by $BOT_NAME with ID $COMMENT_ID. Updating it."
            UPDATED_BODY=$(printf '%s\n%s' "$OLD_BODY" "$COMMENT_BODY")
            
            # Update the existing comment
            gh api \
              --method PATCH \
              -H "Accept: application/vnd.github+json" \
              /repos/${{ github.repository }}/issues/comments/$COMMENT_ID \
              -f body="$UPDATED_BODY"
            success=$?
          else
            echo "No existing comment by $BOT_NAME found. Creating a new comment."

            # Create a new comment
            gh issue comment $ISSUE_NUMBER --body "$COMMENT_BODY"
            success=$?
          fi
          echo "success=${success}" >>$GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BOT_NAME: github-actions[bot]
          COMMENT_BODY: ${{inputs.body}}
          ISSUE_NUMBER: ${{ inputs.issue }}
